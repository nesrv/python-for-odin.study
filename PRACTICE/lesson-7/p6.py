# # LAMBDA

# # анонимная функция

# def y(x): return x ** 2

# # y =lambda x: x ** 2

# z = y(5)

# print(z)

# # x = [1, 2, 3, 5]
# # y1 = map(lambda x: x ** 2, x)
# # print(*y1)

# # y2 = filter(lambda x: x % 2, x)
# # print(*y2)

# cities = ["Москва", "Санкт-Петербург",
#           "Новосибирск", "Екатеринбург", "Казань", 
#           "Нижний Новгород", "Челябинск", "Самара", "Омск", "Ростов-на-Дону"]

# cities.sort()
# print(*cities, sep='\n')

# print('------------')

# cities.sort(key=len)
# print(*cities, sep='\n')


# print('------------')
# # отсортировать по последней букве

# cities.sort(key=lambda x: x[-1])
# print(*cities, sep='\n')

# print('------------')
# # отсортировать по последней букве и первой

# cities.sort(key=lambda x: (x[-1], x[0]))
# print(*cities, sep='\n')



# books = (
#     ("Евгений Онегин", "Пушкин А.С.", 200),
#     ("Муму", "Тургенев И.С.", 500),
#     ("Мастер и Маргарита", "Булгаков М.А.", 500),
#     ("Мертвые души", "Гоголь Н.В.", 200)
# )

# # отсортировать по цене и по фамилии автора

# books = sorted(books, key=lambda x: (x[-1], x[-2]))
# print(*books, sep='\n')


# # Вес за мешок и стоимость записаны на как натуральные числа с списке
# S = [
#     [47, 470], 
#     [50, 600],
#     [60, 480],
#     [45, 540],
#     [30, 300]
# ]

# # Отсортировать мешки по стоимости за кг, 
# # при равной стоимости первыми идут мешки с наименьшим весом

# # for x in S:
# #     x.append(x[1]/x[0])
    
# print(*S,sep='\n')

# print('-----------')
# # S.sort(key=lambda x: (x[-1], x[0]))

# S.sort(key=lambda x: (x[-1] / x[0], x[0]))

# S = [(*x, x[1]/x[0]) for x in S]

# print(*S,sep='\n')

list_of_stop_words = ["в", "и", "по", "за", "на"]

string_to_process = ("Сервис по поиску работы и сотрудников "
                     "HeadHunter опубликовал подборку"
                     " высокооплачиваемых вакансий в России за ноябрь 2024 года"
                     "в Москве. На первых строчках IT-архитекторы и техлиды  ")


string_to_process.lower().split()
# Отфильтровать стоп-слова (союзы и предлоги) из строки.

res = filter(lambda x: x not in list_of_stop_words, string_to_process)
print(*res)